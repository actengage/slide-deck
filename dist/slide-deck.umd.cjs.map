{"version":3,"file":"slide-deck.umd.cjs","sources":["../src/Slide.vue","../src/SlideDeck.vue","../src/SlideDeckControls.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { onMounted, VNode } from 'vue';\n\nconst props = defineProps<{\n    node?: VNode\n}>();\n\nonMounted(() => {\n    node?.el?.dispatchEvent(new Event('enter'));\n});\n</script>\n\n<script lang=\"ts\">\nlet node = $ref<VNode>();\n</script>\n\n<template>\n    <div class=\"slide-deck-slide\">\n        <component\n            :is=\"props.node\"\n            ref=\"node\" />\n    </div>\n</template>","<script lang=\"ts\">\nimport { defineComponent, VNode } from 'vue';\nimport Slide from './Slide.vue';\n// import SlideDeckControls from './SlideDeckControls.vue';\n\nexport default defineComponent({\n\n    components: {\n        Slide,\n        // SlideDeckControls\n    },\n\n    props: {\n\n        /**\n         * Additional attributes to be passed to the slots.\n         */\n        attrs: {\n            type: Object,\n            default: () => ({})\n        },\n\n        /**\n         * The slide key or index that should show.\n         */\n        active: {\n            type: Number,\n            default: 0\n        },\n\n        /**\n         * Automatically resize the height of the slide so it animates from one\n         * slide to the next.\n         */\n        autoResize: {\n            type: Boolean,\n            default: true\n        },\n\n        /**\n         * Show the slide-deck controls to change the slide.\n         */\n        controls: Boolean,\n\n        /**\n         * Additional props to be passed to the slots.\n         */\n        props: {\n            type: Object,\n            default: () => ({})\n        },\n\n        /**\n         * Pass the slots as a prop instead of using <slot />.\n         */\n        slots: {\n            type: Array,\n            default: undefined\n        }\n    },\n\n    emits: [\n        'before-enter',\n        'enter',\n        'after-enter',\n        'before-leave',\n        'leave',\n        'after-leave'\n    ],\n\n    data() {\n        return {\n            currentActive: this.active,\n            direction: 'forward',\n            maxHeight: undefined,\n            mounted: false,\n            lastSlide: null,\n            sliding: false,\n        };\n    },\n    \n    watch: {\n\n        currentActive(value: number, oldValue: number): void {\n            this.lastSlide = oldValue;\n            this.direction = (\n                this.findIndex(oldValue) > this.findIndex(value)\n            ) ? 'backward' : 'forward';\n        }\n    },\n    \n    mounted(): void {\n        this.$nextTick(() => {\n            this.mounted = true;\n            this.$emit('enter', this.slot());\n        });\n    },\n\n    methods: {\n\n        findIndex(key: string|number): number {\n            return this.vnodes().findIndex((vnode: VNode, i: number) => {\n                if(vnode.key === key) {\n                    return true;\n                }\n                \n                if(i === key) {\n                    return true;\n                }\n\n                return false;\n            });\n        },\n\n        find(key: string|number): VNode|undefined {\n            return this.vnodes()[this.findIndex(key)];\n        },\n\n        first(): void {\n            this.goto(0);\n        },\n\n        last(): void {\n            this.goto(this.vnodes().length - 1);\n        },\n\n        goto(key: number): void {\n            if(!this.sliding) {\n                this.currentActive = Math.max(0, key);\n            }\n        },\n\n        next(): void {\n            if(!this.sliding) {\n                this.currentActive = Math.min(\n                    this.findIndex(this.currentActive) + 1, this.vnodes().length - 1\n                );\n            }\n        },\n\n        prev(): void {\n            if(!this.sliding) {\n                this.currentActive = Math.max(\n                    this.findIndex(this.currentActive) - 1, 0\n                );\n            }\n        },\n\n        resize(el: HTMLElement): void {\n            const height = getComputedStyle(el).height;\n\n            this.maxHeight = height === '0x'\n                ? this.maxHeight\n                : height;\n        },\n        \n        slot(): VNode {\n            return this.find(this.currentActive);\n        },\n\n        vnodes(): VNode[] {\n            return (this.slots || this.$slots.default(this))\n                .map((slot: VNode, key: number) => {\n                    slot.props = Object.assign(\n                        {}, slot.props, this.props, this.attrs\n                    );                                        \n                                        \n                    return Object.assign(slot, {\n                        key\n                    });\n                });\n        },\n\n        onClickControl(e: Event, vnode: VNode): void {\n            if(!this.sliding) {\n                this.goto(vnode);\n            }\n        },\n\n        onBeforeLeave(el: HTMLElement): void {\n            this.autoResize && this.resize(el);\n            this.$emit(\n                'before-leave',\n                this.slot(),\n                this.find(this.lastSlide)\n            );\n        },\n\n        onBeforeEnter(): void {\n            this.sliding = true;\n            this.$emit(\n                'before-enter',\n                this.slot(),\n                this.find(this.lastSlide)\n            );\n        },\n\n        onEnter(el: HTMLElement): void {\n            this.$nextTick(() => {\n                this.autoResize && this.resize(el);\n                this.$emit(\n                    'enter',\n                    this.slot(),\n                    this.find(this.lastSlide)\n                );\n            });\n        },\n\n        onAfterEnter(): void {\n            this.$emit(\n                'after-enter',\n                this.slot(),\n                this.find(this.lastSlide)\n            );\n        },\n\n        onLeave(): void {\n            this.$emit(\n                'leave',\n                this.slot(),\n                this.find(this.lastSlide)\n            );\n        },\n\n        onAfterLeave(): void {\n            this.sliding = false;\n\n            this.$nextTick(() => {\n                this.maxHeight = null;\n                this.$emit(\n                    'after-leave',\n                    this.slot(),\n                    this.find(this.lastSlide)\n                );\n            });\n        }\n\n    }\n\n});\n</script>\n\n<template>\n    <div\n        class=\"slide-deck\"\n        :class=\"{ sliding }\">\n        <slot\n            name=\"top\"\n            :active=\"currentActive\" />\n        <div\n            ref=\"content\"\n            class=\"slide-deck-content\"\n            :class=\"{ [direction]: true }\"\n            :style=\"{ maxHeight }\">\n            <transition\n                :name=\"`slide-${direction}`\"\n                @before-enter=\"onBeforeEnter\"\n                @enter=\"onEnter\"\n                @after-enter=\"onAfterEnter\"\n                @before-leave=\"onBeforeLeave\"\n                @leave=\"onLeave\"\n                @after-leave=\"onAfterLeave\">\n                <keep-alive>\n                    <slide\n                        ref=\"slide\"\n                        :key=\"currentActive\"\n                        :node=\"find(currentActive)\" />\n                </keep-alive>\n            </transition>\n        </div>\n        <slot\n            name=\"middle\"\n            :active=\"currentActive\" />\n        <!-- <slot\n            name=\"controls\"\n            :active=\"currentActive\">\n            <slide-deck-controls\n                v-if=\"controls && mounted\"\n                ref=\"controls\"\n                :slots=\"slots()\"\n                :active=\"currentActive\"\n                @click=\"onClickControl\">\n                <template #default=\"context\">\n                    <slot\n                        name=\"bullet\"\n                        v-bind=\"context\" />\n                </template>\n            </slide-deck-controls>\n        </slot> -->\n        <slot\n            name=\"bottom\"\n            :active=\"currentActive\" />\n    </div>\n</template>\n\n<style>\n.slide-deck {\n    height: auto;\n    position: relative;\n}\n\n.slide-deck.sliding {\n    overflow: hidden;\n}\n\n.slide-deck .slide-deck-content {\n    display: flex;\n    flex-wrap: nowrap;\n    transition-property: max-height;\n    transition-duration: 250ms;\n    transition-timing-function: ease-in-out;\n}\n\n.slide-deck .slide-deck-content.forward {\n    flex-direction: row;\n}\n\n.slide-deck .slide-deck-content.backward {\n    flex-direction: row-reverse;\n}\n\n.slide-deck .slide-deck-slide {\n    width: 100%;\n    flex-shrink: 0;\n    align-self: flex-start;\n}\n\n.slide-forward-leave-active,\n.slide-forward-enter-active,\n.slide-backward-leave-active,\n.slide-backward-enter-active {\n    transition: all 250ms ease-in-out;\n}\n\n.slide-deck .slide-forward-enter-to,\n.slide-deck .slide-forward-leave-to { \n    transform: translateX(-100%);\n}\n\n.slide-deck .slide-backward-enter-to,\n.slide-deck .slide-backward-leave-to { \n    transform: translateX(100%);\n}\n</style>\n","<script lang=\"ts\">\nimport type { VNode } from 'vue';\n\nexport default {\n\n    props: {\n\n        /**\n         * The active key or index that should show.\n         *\n         * @type {Number}\n         */\n        active: {\n            type: Number,\n            default: 0\n        },\n\n        /**\n         * An array of vnodes.\n         *\n         * @type {Array}\n         */\n        slots: {\n            type: Array,\n            required: true\n        }\n\n    },\n\n    computed: {\n        context() {\n            return this;\n        }\n    },\n\n    methods: {\n\n        isActive(vnode: VNode, i: number) {\n            if(vnode.key === this.active) {\n                return true;\n            }\n            \n            if(i === this.active) {\n                return true;\n            }\n\n            return false;\n        },\n\n        onClick(event: Event, slide: VNode) {\n            this.$emit('click', event, slide);\n        }\n\n    }\n\n};\n</script>\n\n<template>\n    <div class=\"slide-deck-controls\">\n        <a\n            href=\"#\"\n            class=\"slide-deck-control-icon\"\n            :class=\"{'is-active': isActive(slide, active)}\"\n            @click.prevent=\"onClick($event, slide)\">\n            <slot v-bind=\"Object.assign({ slide, active }, context)\">&bull;</slot>\n        </a>\n    </div>\n</template>\n\n<style>\n.slide-deck-controls {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: currentColor;\n}\n\n.slide-deck-controls.absolute {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n}\n\n.slide-deck-controls .slide-deck-control-icon {\n    font-size: 2em;\n    padding: .25em .15em;\n}\n\n.slide-deck-controls > a:hover {\n    text-decoration: none;\n}\n\n.slide-deck-controls :not(:last-child) {\n    margin-right: .5rem;\n}\n\n.slide-deck-controls .slide-deck-control-icon.is-active {\n    color: #007bff;\n}\n</style>\n"],"names":["node","_ref","onMounted","_b","_a","_sfc_main$1","defineComponent","Slide","value","oldValue","key","vnode","i","el","height","slot","_resolveComponent","_normalizeClass","_ctx","_renderSlot","_createElementVNode","_normalizeStyle","_Transition","_withCtx","_openBlock","_createBlock","_KeepAlive","_component_slide","_sfc_main","event","slide","_sfc_render","_cache","$props","$setup","$data","$options","_createElementBlock","_hoisted_1","_withModifiers","$event"],"mappings":"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"}